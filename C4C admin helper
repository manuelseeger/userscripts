// ==UserScript==
// @name         C4C Admin helper
// @namespace    http://www.swisslife.ch
// @version      0.1
// @description  Help our C4C admins
// @author       Manuel Seeger
// @match        https://*my350201-sso.crm.ondemand.com/*
// @icon         https://www.google.com/s2/favicons?sz=64&domain=ondemand.com
// @require      http://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js
// @require      https://gist.github.com/raw/2625891/waitForKeyElements.js
// @grant    GM_addStyle
// ==/UserScript==

(function() {
    'use strict';

    jQuery.fn.comments = function( blnDeep ){
        var blnDeep = (blnDeep || false);
        var jComments = $( [] );

        // Loop over each node to search its children for
        // comment nodes and element nodes (if deep search).
        this.each(
            function( intI, objNode ){
                var objChildNode = objNode.firstChild;
                var strParentID = $( this ).attr( "id" );

                // Keep looping over the top-level children
                // while we have a node to examine.
                while (objChildNode){

                    // Check to see if this node is a comment.
                    if (objChildNode.nodeType === 8){

                        // We found a comment node. Add it to
                        // the nodes collection wrapped in a
                        // DIV (as we may have HTML).
                        jComments = jComments.add(
                            "<div rel='" + strParentID + "'>" +
                            objChildNode.nodeValue +
                            "</div>"
                        );

                    } else if (
                        blnDeep &&
                        (objChildNode.nodeType === 1)
                    ) {

                        // Traverse this node deeply.
                        jComments = jComments.add(
                            $( objChildNode ).comments( true )
                        );

                    }

                    // Move to the next sibling.
                    objChildNode = objChildNode.nextSibling;

                }

            }
        );

        // Return the jQuery comments collection.
        return( jComments );
    }

    function main() {
        console.log('main part');
    }

    let stats = null;

    function findPerformanceStats() {

        const comments = $('html').comments();
        if (comments.length == 0) {
            console.log('will keep looking');
            setInterval(findPerformanceStats, 3000);
        } else {
            if (comments[0].innerHTML.startsWith("\n=====Performance Statistics=====\n")) {
                const statsobject = comments[0].innerHTML.match(/\{[^{}]*\}/)[0];
                let new_stats = JSON.parse(statsobject);
                if (stats == null || new_stats['ui-step'] != stats['ui-step']) {
                    stats = new_stats;
                    main(stats);
                    setInterval(findPerformanceStats, 3000);
                }
            }
        }
    }

    findPerformanceStats();
})();
